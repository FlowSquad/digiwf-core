server:
  port: '${DMS_INTEGRATION_SERVER_PORT:-8080}'
spring:
  application:
    name: @project.artifactId@
  cloud:
    function:
      definition: functionRouter;sendMessage;
    stream:
      function:
        routing:
          enabled: 'true'
      bindings:
        functionRouter-in-0:
          group: "dwf-dms-service"
          destination: "dwf-dms-${DIGIWF_ENV}"
        sendMessage-out-0:
          destination: "dwf-connector-${DIGIWF_ENV}"
      kafka:
        binder:
          configuration:
            security:
              protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
          producerProperties:
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          consumerProperties:
            auto:
              offset:
                reset: latest
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          brokers: ${KAFKA_BOOTSTRAP_SERVER:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:29092}
  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: '*'
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
digiwf:
  integration:
    dms:
      fabasoft:
        businessapp: digiwf
        username: ${FABASOFT_DMS_USERNAME}
        password: ${FABASOFT_DMS_PASSWORD}
        address: "${FABASOFT_DMS_HOST:http://localhost}:${FABASOFT_DMS_PORT:8191}/services/dms"

io:
  muenchendigital:
    digiwf:
      message:
        incidentDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        bpmnErrorDestination: "dwf-connector-bpmnerror-${DIGIWF_ENV}"
        correlateMessageDestination: "dwf-connector-${DIGIWF_ENV}"
        typeMappings:
          createProcedure: "createProcedureMessageProcessor"