# DigiWF config
io:
  muenchendigital:
    digiwf:
      alw.personeninfo:
        base-url: ${ALW_REST_BASE_URL}
        rest-endpoint: ${ALW_REST_ENDPOINT}
        timeout: 1500
        username: ${ALW_REST_USERNAME}
        password: ${ALW_REST_SECRET}
        sachbearbeitung-mapping-config-url: ${ALW_SACHBEARBEITUNG_CONFIG:/config/alw-sachbearbeitung.properties}
        functional-ping:
          enabled: ${ALW_PING_ENABLED:true}
          azr-number: ${ALW_PING_AZR_NUMBER:}
      message:
        incidentDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        bpmnErrorDestination: "dwf-connector-bpmnerror-${DIGIWF_ENV}"
        correlateMessageDestination: "dwf-connector-${DIGIWF_ENV}"
        deadLetterQueueDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        typeMappings:
          getAlwResponsibility: "getAlwResponsibility"

info:
  application:
    name: '@project.artifactId@'
    version: '@project.version@'

spring:
  application.name: ${info.application.name}
  banner.location: banner.txt
  cloud:
    stream:
      bindings:
        functionRouter-in-0:
          group: "dwf-alw-service"
          destination: dwf-alw-${DIGIWF_ENV}
        sendMessage-out-0:
          destination: dwf-connector-${DIGIWF_ENV}

server:
  shutdown: "graceful"
  port: ${ALW_INTEGRATION_SERVER_PORT:8080}
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false

# Config for spring actuator endpoints
management:
  server.port: ${server.port}
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, prometheus, livenessstate, readinessstate
      path-mapping:
        prometheus: metrics
  endpoint:
    health.enabled: true
    info.enabled: true
    prometheus.enabled: true
  info:
    env:
      enabled: true
