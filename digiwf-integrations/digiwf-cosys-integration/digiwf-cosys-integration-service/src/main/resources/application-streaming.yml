spring:
  cloud:
    function:
      definition: functionRouter;sendMessage;
    stream:
      function:
        routing:
          enabled: true
      bindings:
        functionRouter-in-0:
          group: "dwf-cosys-service"
          destination: "dwf-cosys-${DIGIWF_ENV}"
        sendMessage-out-0:
          destination: "dwf-connector-${DIGIWF_ENV}"
      kafka:
        binder:
          consumerProperties:
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          producerProperties:
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          brokers: ${KAFKA_BOOTSTRAP_SERVER:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:29092}

#        ##DLQ Config -> only possible if group for functionRouter is set
#        default:
#          consumer:
#            dlqName:
#            enableDlq: true
#      default:
#        consumer:
#          #maxAttempts: 1

  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"

io:
  muenchendigital:
    digiwf:
      message:
        incidentDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        bpmnErrorDestination: "dwf-connector-bpmnerror-${DIGIWF_ENV}"
        correlateMessageDestination: "dwf-connector-${DIGIWF_ENV}"
        typeMappings:
          createCosysDocument: "cosysIntegration"
