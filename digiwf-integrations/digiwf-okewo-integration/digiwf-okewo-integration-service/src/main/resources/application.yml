management:
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, prometheus, livenessstate, readinessstate
        path-mapping:
          prometheus: metrics
  server:
    port: ${server.port}
server:
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false
  port: 8080
  shutdown: graceful
spring:
  application:
    name: DigiWF OK.EWO Integration
  lifecycle:
    timeout-per-shutdown-phase: 1m
  cloud:
    stream:
      bindings:
        functionRouter-in-0:
          group: "dwf-okewo-service"
          destination: dwf-okewo-${DIGIWF_ENV}
        sendMessage-out-0:
          destination: dwf-connector-${DIGIWF_ENV}
# DigiWF config
io:
  muenchendigital:
    digiwf:
      message:
        incidentDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        bpmnErrorDestination: "dwf-connector-bpmnerror-${DIGIWF_ENV}"
        correlateMessageDestination: "dwf-connector-${DIGIWF_ENV}"
        deadLetterQueueDestination: "dwf-connector-incident-${DIGIWF_ENV}"
        typeMappings:
          getPerson: "getPerson"
          searchPerson: "searchPerson"
          getPersonErweitert: "getPersonErweitert"
          searchPersonErweitert: "searchPersonErweitert"
# TODO: move to io.muenchendigital
de:
  muenchen:
    oss:
      digiwf:
        okewo:
          url: "http://localhost:8080"
          username: ""
          password: ""
          benutzerId: ""
