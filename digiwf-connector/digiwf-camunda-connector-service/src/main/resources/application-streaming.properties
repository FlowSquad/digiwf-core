spring.cloud.stream.default-binder=kafka
#Spring Cloud Functions
spring.cloud.function.definition=createIncident;createBpmnError;correlateMessage;dynamicProducer;
spring.cloud.stream.bindings.correlateMessage-in-0.destination=${digiwf.streaming.connector.topics.message}
spring.cloud.stream.bindings.correlateMessage-in-0.group=${digiwf.streaming.connector.group}
spring.cloud.stream.bindings.createIncident-in-0.destination=${digiwf.streaming.connector.topics.incident}
spring.cloud.stream.bindings.createIncident-in-0.group=${digiwf.streaming.connector.group}
spring.cloud.stream.bindings.createBpmnError-in-0.destination=${digiwf.streaming.connector.topics.bpmnerror}
spring.cloud.stream.bindings.createBpmnError-in-0.group=${digiwf.streaming.connector.group}
spring.cloud.stream.bindings.dynamicProducer-out-0.destination=${digiwf.streaming.connector.topics.message}
spring.cloud.stream.bindings.dynamicProducer-out-0.producer.auto-startup=true
#Kafka Config
spring.cloud.stream.kafka.binder.consumerProperties.key.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.producerProperties.key.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.binder.producerProperties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#DLQ Config -> only possible if group for functionRouter is set
spring.cloud.stream.default.consumer.maxAttempts=1
spring.cloud.stream.kafka.default.consumer.dlqName=${digiwf.streaming.connector.topics.dlq}
spring.cloud.stream.kafka.default.consumer.enableDlq=true
