DIGIWF_ENV: itest
io:
  muenchendigital:
    digiwf:
      message:
        incidentDestination: "dwf-connector-incident-e2e-itest"
        bpmnErrorDestination: "dwf-connector-bpmnerror-e2e-itest"
        correlateMessageDestination: "dwf-connector-e2e-itest"

spring:
  cloud:
    function:
      definition: functionRouter;sendMessage;integrationTestConsumer;
      routing-expression: "headers['type']"

    stream:
      bindings:
        functionRouter-in-0:
          destination: "digiwf-e2e-itest-topic"
          group: e2e-integration-test
        sendMessage-out-0:
          destination: ${io.muenchendigital.digiwf.message.correlateMessageDestination}
        integrationTestConsumer-in-0:
          destination: ${io.muenchendigital.digiwf.message.correlateMessageDestination}
          group: e2e-integration-test
      kafka:
        binder:
          configuration:
            security:
              protocol: PLAINTEXT
          producerProperties:
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          consumerProperties:
            auto:
              offset:
                reset: latest
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          brokers: localhost:19999
  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: '*'
