info:
  application:
    name: ${spring.application.name}
spring:
  application:
    name: DigiWF ApiGateway
  main:
    web-application-type: reactive
  jackson:
    serialization:
      indent-output: on
  session:
    timeout: 1800  # in seconds; Goal: same lifetime as SSO Session, actual: 30 minutes
  zipkin:
    enabled: false
    sleuth:
      reactor:
        instrumentation-type: decorate_on_each  # https://github.com/spring-cloud/spring-cloud-gateway/pull/2106
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${SSO_ISSUER_URL}
        registration:
          keycloak:
            client-id: ${SSO_ENGINE_CLIENT_ID}
            client-secret: ${SSO_ENGINE_CLIENT_SECRET}
            scope: email, profile, openid  # needed for userInfo endpoint
            provider: keycloak

server:
  port: ${GATEWAY_SERVER_PORT:8082}
  error:
    include-exception: false
    include-stacktrace: never
    include-message: always
    whitelabel:
      enabled: false

management:
  endpoints:
    enabled-by-default: false
    web:
      cors:
        allowedOrigins:
          - "http://localhost:8081"
          - "http://127.0.0.1:8081"
          - "http://localhost:8083" # for cgi notebooks necessary
          - "http://127.0.0.1:8083" # for cgi notebooks necessary
          - "http://keycloak:8083" # for cgi notebooks necessary
        allowedMethods: "*"
        allowedHeaders: "*"
        allowCredentials: on
        maxAge: 3600
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      enabled: on
      probes:
        enabled: true
    info:
      enabled: on
    prometheus:
      enabled: on
  info:
    env:
      enabled: true
